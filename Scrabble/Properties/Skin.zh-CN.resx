<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="2xLetter" xml:space="preserve">
    <value>2x字母</value>
    <comment>HelpWindow.xaml</comment>
  </data>
  <data name="2xWord" xml:space="preserve">
    <value>2x单词</value>
    <comment>HelpWindow.xaml</comment>
  </data>
  <data name="3xLetter" xml:space="preserve">
    <value>3x字母</value>
    <comment>HelpWindow.xaml</comment>
  </data>
  <data name="3xWord" xml:space="preserve">
    <value>3x单词</value>
    <comment>HelpWindow.xaml</comment>
  </data>
  <data name="AboutTitle" xml:space="preserve">
    <value>关于</value>
    <comment>AboutWindow.xaml; OldLocal: xmlns:local="clr-namespace:Scrabble.View"</comment>
  </data>
  <data name="Author" xml:space="preserve">
    <value>作者：poyea@GitHub；储存库：poyea/scrabble</value>
    <comment>AboutWindow.xaml; This line is not active</comment>
  </data>
  <data name="BlankTileForm" xml:space="preserve">
    <value>空白字母牌表格</value>
    <comment>BlankTileForm.xaml</comment>
  </data>
  <data name="BoardTileTypes" xml:space="preserve">
    <value>字母牌类型</value>
    <comment>HelpWindow.xaml</comment>
  </data>
  <data name="ChooseLetter" xml:space="preserve">
    <value>选择一个字母来代表空白字母牌：</value>
    <comment>BlankTileForm.xaml</comment>
  </data>
  <data name="DesktopInterface" xml:space="preserve">
    <value>桌面</value>
    <comment>MainWindow.xaml</comment>
  </data>
  <data name="Done" xml:space="preserve">
    <value>完毕</value>
    <comment>BlankTileForm.xaml</comment>
  </data>
  <data name="FinishButton" xml:space="preserve">
    <value>结束</value>
  </data>
  <data name="FinishSwap" xml:space="preserve">
    <value>玩家{0}换好牌了！</value>
    <comment>"Player " + (PlayerNow + 1) + " finishing swapping tiles!"</comment>
  </data>
  <data name="FinishTurn" xml:space="preserve">
    <value>结束这轮</value>
    <comment>DesktopWindow.xaml</comment>
  </data>
  <data name="FirstPlayer" xml:space="preserve">
    <value>玩家{0}是第一！</value>
  </data>
  <data name="GameJudge" xml:space="preserve">
    <value>裁判：你没有得分。请再试一次！</value>
  </data>
  <data name="GameWinner" xml:space="preserve">
    <value>得分为{0}, 玩家{1}获胜！</value>
    <comment>"Game Winner is Player " + (game.gs.ListOfPlayers[0].Id + 1) + " with scores" + (game.gs.ListOfPlayers[0].Score) + "!!!"</comment>
  </data>
  <data name="MobileFinishButton" xml:space="preserve">
    <value>结束</value>
  </data>
  <data name="MobileInterface" xml:space="preserve">
    <value>移动端</value>
    <comment>MainWindow.xaml</comment>
  </data>
  <data name="MobilePlayerandScore" xml:space="preserve">
    <value>当前：玩家{0} |分数：</value>
  </data>
  <data name="MobilePlayerNow" xml:space="preserve">
    <value>当前玩家： {0}</value>
  </data>
  <data name="MobileSwapButton" xml:space="preserve">
    <value>换牌</value>
  </data>
  <data name="MobileTitle" xml:space="preserve">
    <value>玩家{0} - 移动端涂鸦拼字</value>
    <comment>"Player " + (P + 1) + " - MobileScrabble"</comment>
  </data>
  <data name="MobileWinner" xml:space="preserve">
    <value>获胜者：P{0} ， 分数：{1} ！</value>
  </data>
  <data name="MobileYourTurn" xml:space="preserve">
    <value>轮到你了！</value>
  </data>
  <data name="NeedFriends" xml:space="preserve">
    <value>您需要更多朋友才能开始游戏！邀请更多朋友！</value>
  </data>
  <data name="NoSwap" xml:space="preserve">
    <value>你只剩下不到 7 张牌，现在不能换牌了！</value>
    <comment>"You can't swap tiles now becuase less than 7 tiles are left in the bag!"</comment>
  </data>
  <data name="NumofPlayer" xml:space="preserve">
    <value>这个游戏有{0}名玩家。</value>
  </data>
  <data name="NumofPlayers" xml:space="preserve">
    <value>这个游戏有{0}名玩家......</value>
    <comment>DesktopWindow.xaml</comment>
  </data>
  <data name="OtherPlayerPass" xml:space="preserve">
    <value>玩家{0}跳过了这轮！</value>
  </data>
  <data name="OtherPlayerSwap" xml:space="preserve">
    <value>玩家{0}已经换了牌！</value>
  </data>
  <data name="PlayerCSScores" xml:space="preserve">
    <value>玩家{0}的得分是：{1}</value>
    <comment>Player.cs THIS ONE IS NOT WORKING</comment>
  </data>
  <data name="PlayerFour" xml:space="preserve">
    <value>玩家4</value>
    <comment>MainWindow.xaml</comment>
  </data>
  <data name="PlayerOne" xml:space="preserve">
    <value>玩家1</value>
    <comment>MainWindow.xaml</comment>
  </data>
  <data name="PlayerPass" xml:space="preserve">
    <value>播放器{0}已经决定轮到他们了！</value>
    <comment>"Player " + (PlayerNow + 1) + " decides to pass the turn!"</comment>
  </data>
  <data name="PlayerSwap" xml:space="preserve">
    <value>请选择要交换的字母牌，然后按结束键。</value>
    <comment>"Select the tiles you don't want...Then press the FINISH button."</comment>
  </data>
  <data name="PlayerThree" xml:space="preserve">
    <value>玩家3</value>
    <comment>MainWindow.xaml</comment>
  </data>
  <data name="PlayerTurn" xml:space="preserve">
    <value>轮到玩家{0}了。</value>
  </data>
  <data name="PlayerTurnFinish" xml:space="preserve">
    <value>玩家{0}的这轮结束了！</value>
  </data>
  <data name="PlayerTwo" xml:space="preserve">
    <value>玩家2</value>
    <comment>MainWindow.xaml</comment>
  </data>
  <data name="PlayerWord" xml:space="preserve">
    <value>玩家{0}说道：</value>
  </data>
  <data name="RoundScore" xml:space="preserve">
    <value>({0}分）</value>
  </data>
  <data name="ScrabbleName" xml:space="preserve">
    <value>涂鸦拼字</value>
    <comment>AboutWindow.xaml</comment>
  </data>
  <data name="StartAgain" xml:space="preserve">
    <value>关闭此窗口开始新游戏！</value>
    <comment>"Close this window to restart Scrabble!"</comment>
  </data>
  <data name="StartGame" xml:space="preserve">
    <value>游戏...开始！</value>
  </data>
  <data name="SwapButton" xml:space="preserve">
    <value>换牌</value>
  </data>
  <data name="TextFirstPlayer" xml:space="preserve">
    <value>玩家{0}是第一！</value>
  </data>
  <data name="TextInput" xml:space="preserve">
    <value>请输入：</value>
  </data>
  <data name="TextInstructions" xml:space="preserve">
    <value>“换牌“然后输入字母（比如V，D，A）或者输入“移动” A(7,7)以放置字母牌，输入“跳过”以跳过这轮，或者“排名”进行排名。</value>
  </data>
  <data name="TextInterface" xml:space="preserve">
    <value>文本</value>
    <comment>MainWindow.xaml</comment>
  </data>
  <data name="TextJudgeCommand" xml:space="preserve">
    <value>游戏裁判：你的指令有误。请再试一次！</value>
  </data>
  <data name="TextJudgeMove" xml:space="preserve">
    <value>游戏裁判：错误的移动指令。请再试一次。</value>
    <comment>"Game Judge: Wrong MOVE arguments. Please try again."</comment>
  </data>
  <data name="TextNoScore" xml:space="preserve">
    <value>裁判：你没有得分。请再试一次！</value>
    <comment>"Game Judge: \"You didn't score. Please try again!\""</comment>
  </data>
  <data name="TextNoSwap" xml:space="preserve">
    <value>游戏裁判：从现在开始你不能换牌了！</value>
  </data>
  <data name="TextNumofPlayer" xml:space="preserve">
    <value>这个游戏有{0}名玩家。</value>
  </data>
  <data name="TextOnePlayerScore" xml:space="preserve">
    <value>玩家{0}-{1} | </value>
  </data>
  <data name="TextPass" xml:space="preserve">
    <value>玩家{0}跳过了这轮！</value>
  </data>
  <data name="TextPlayerFinish" xml:space="preserve">
    <value>玩家{0}的这轮结束了！</value>
  </data>
  <data name="TextPlayerScores" xml:space="preserve">
    <value>玩家得分：</value>
  </data>
  <data name="TextPlayerWord" xml:space="preserve">
    <value>玩家{0}说道：</value>
  </data>
  <data name="TextPressThis" xml:space="preserve">
    <value>完成后单击提交或按输入键。</value>
  </data>
  <data name="TextScore" xml:space="preserve">
    <value>玩家{0}得到{1}！</value>
  </data>
  <data name="TextStartGame" xml:space="preserve">
    <value>游戏...开始！</value>
  </data>
  <data name="TextSwap" xml:space="preserve">
    <value>玩家{0}已经换好牌了！</value>
  </data>
  <data name="TextWinner" xml:space="preserve">
    <value>玩家{1}以{0}分获胜！</value>
  </data>
  <data name="TextWordScore" xml:space="preserve">
    <value>({0}点）</value>
  </data>
  <data name="TextYourTiles" xml:space="preserve">
    <value>你的牌：</value>
  </data>
  <data name="TextYourTurn" xml:space="preserve">
    <value>轮到你了！</value>
  </data>
  <data name="TileChar" xml:space="preserve">
    <value>玩家{0}得到{1}！</value>
  </data>
  <data name="ViewDesktopPlayer" xml:space="preserve">
    <value>玩家{0}- 桌面版拼字游戏</value>
    <comment>Scrabble2018.Skin.ViewDesktopPlayer</comment>
  </data>
  <data name="ViewTextPlayer" xml:space="preserve">
    <value>玩家{0}- 文字版拼字游戏</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>欢迎各位玩家！欢迎来到涂鸦拼字游戏！</value>
    <comment>Welcome.cs</comment>
  </data>
  <data name="XAMLAbout" xml:space="preserve">
    <value>关于</value>
    <comment>AboutWindow.xaml</comment>
  </data>
  <data name="XAMLHelp" xml:space="preserve">
    <value>帮助</value>
    <comment>DesktopWindow.xaml</comment>
  </data>
  <data name="XAMLInterface" xml:space="preserve">
    <value>请选择您的界面！</value>
    <comment>MainWindow.xaml</comment>
  </data>
  <data name="XAMLPASS" xml:space="preserve">
    <value>跳过</value>
    <comment>DesktopWindow.xaml</comment>
  </data>
  <data name="XAMLRACK" xml:space="preserve">
    <value>返回你的牌库</value>
    <comment>DesktopWindow.xaml</comment>
  </data>
  <data name="XAMLStart" xml:space="preserve">
    <value>开始</value>
    <comment>AboutWindow.xaml</comment>
  </data>
  <data name="XAMLSWAP" xml:space="preserve">
    <value>换牌</value>
    <comment>DesktopWindow.xaml</comment>
  </data>
  <data name="XAMLTitle" xml:space="preserve">
    <value>涂鸦拼字</value>
    <comment>MainWindow.xaml</comment>
  </data>
  <data name="XAMLWelcome" xml:space="preserve">
    <value>欢迎各位玩家！</value>
    <comment>MainWindow.xaml</comment>
  </data>
  <data name="XAMLYourRack" xml:space="preserve">
    <value>这是你的牌库。</value>
    <comment>DesktopWindow.xaml</comment>
  </data>
  <data name="YourTurn" xml:space="preserve">
    <value>轮到你了！</value>
  </data>
  <data name="PlayerCS" xml:space="preserve">
    <value>玩家{0}的得分是：{1}</value>
  </data>
  <data name="I18Nwiz" xml:space="preserve">
    <value>这个国际化和本地化版本的 Scrabble 是由 Nicole Anjuli Henry、Tulsiben Patel、Linh Nguyen 和 Aurora Wang 为我们在蒙特雷米德尔伯里国际研究学院的软件国际化课程创建的。</value>
    <comment>Get credit!!</comment>
  </data>
  <data name="MobileName" xml:space="preserve">
    <value>涂鸦拼字</value>
    <comment>MobileWindow.xaml</comment>
  </data>
    <data name="MobileButton1" xml:space="preserve">
    <value>结束</value>
  </data>
    <data name="MobileButton2" xml:space="preserve">
    <value>换牌</value>
  </data>
    <data name="MobileButton3" xml:space="preserve">
    <value>刷新</value>
  </data>
    <data name="MobileLabel" xml:space="preserve">
    <value>看下你的字母牌吧！</value>
  </data>
</root>
